////////////////////////////////////////////
//  ------------------------------------
//  ---MUCKY VISION 3 (BASIC ENGINE) ---
//  ------------------------------------
//
//  FancyTypeface.cpp
//
//  Copyright (c) Muckytaters 2023
//
//  This program is free software: you can
//  redistribute it and/or modify it under 
//  the terms of the GNU General Public License
//  as published by the Free Software Foundation,
//  either version 3 of the License, or (at your
//  option) any later version.
//
//  This program is distributed in the hope it
//  will be useful, but WITHOUT ANY WARRANTY;
//  without even the implied warranty of MERCHANTABILITY
//  or FITNESS FOR A PARTICULAR PURPOSE. See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU
//  General Public License along with this
//  program. If not, see http://www.gnu.org/license
//
//  IMPORTANT: Please see the statement in file 
//  'IMAGE_RIGHTS_DISCLAIMER.md'
//
////////////////////////////////////////////

#include "FancyTypeface.h"


////////////////////////////////////
// MISC GRAPHICS
const std::vector<std::vector<uint8_t>> MCK::FancyTypeface::misc_pixel_data{  // Start of outer vector
{ // ASCII 0
0b00000000, 0b00000000, 0b00000001,
0b00000000, 0b00000000, 0b00000101,
0b00000000, 0b00000000, 0b00010101,
0b00000000, 0b00000000, 0b01010101,
0b00000000, 0b00000001, 0b01011001,
0b00000000, 0b00000101, 0b01010101,
0b00000000, 0b00010101, 0b01010101,
0b00000000, 0b01011001, 0b01010101,
0b00000001, 0b01010101, 0b01011001,
0b00000101, 0b01010110, 0b01010101,
0b00010101, 0b01010101, 0b01010101,
0b01010101, 0b10010101, 0b01010101
},
{ // 1
0b00000000, 0b00000000, 0b00000000,
0b00000000, 0b00000000, 0b00000000,
0b00000000, 0b00000000, 0b00000000,
0b00000000, 0b00000000, 0b00000000,
0b00000000, 0b00000000, 0b00000000,
0b00000000, 0b00000000, 0b00000000,
0b00000000, 0b00010100, 0b00000000,
0b00000000, 0b01010101, 0b00000000,
0b00000001, 0b01010101, 0b01000000,
0b00000101, 0b01010110, 0b01010000,
0b00010101, 0b01010101, 0b01010100,
0b01010101, 0b10010101, 0b01010101
},
{ // 2
0b01000000, 0b00000000, 0b00000000,
0b01010000, 0b00000000, 0b00000000,
0b01010100, 0b00000000, 0b00000000,
0b01010101, 0b00000000, 0b00000000,
0b01010101, 0b01000000, 0b00000000,
0b01100101, 0b01010000, 0b00000000,
0b01010101, 0b10010100, 0b00000000,
0b01010101, 0b01010101, 0b00000000,
0b01010101, 0b01010101, 0b01000000,
0b01010101, 0b01010101, 0b01010000,
0b01011001, 0b01011001, 0b01010100,
0b01010101, 0b01010101, 0b01010101
},
{ // 3
0b01000000, 0b00000000, 0b00000001,
0b01010000, 0b00000000, 0b00000101,
0b01010100, 0b00000000, 0b00010101,
0b01100101, 0b00000000, 0b01010101,
0b01010101, 0b01000001, 0b01010101,
0b01010101, 0b01010101, 0b01010110,
0b01010101, 0b01010101, 0b10010101,
0b01010101, 0b01010101, 0b01010101,
0b01100101, 0b01010101, 0b01010101,
0b01010101, 0b01011001, 0b01010101,
0b01010101, 0b01010101, 0b01011001,
0b01010110, 0b01010101, 0b01010101
},
{ // 4
0b01010101, 0b01010110, 0b01010101,
0b01011001, 0b01010101, 0b01010101,
0b01010101, 0b01010101, 0b01010101,
0b01010101, 0b01010101, 0b01100101,
0b01010101, 0b01010101, 0b01010101,
0b01010101, 0b10010101, 0b01010101,
0b01010101, 0b01010101, 0b01010101,
0b01010101, 0b01010101, 0b01010101,
0b01010101, 0b01010101, 0b10010101,
0b01010110, 0b01010101, 0b01010101,
0b01010101, 0b01010101, 0b01010101,
0b01010101, 0b01010101, 0b01011001
}
};

////////////////////////////////////
// PUNCTUATION SYMBOLS
const std::vector<uint8_t> MCK::FancyTypeface::period_pixel_data
{ // ASCII 46
0b00000000, 0b00000000, 0b00000000,
0b00000000, 0b00000000, 0b00000000,
0b00000000, 0b00000000, 0b00000000,
0b00000000, 0b00000000, 0b00000000,
0b00000000, 0b00000000, 0b00000000,
0b00000000, 0b00000000, 0b00000000,
0b00000000, 0b00000000, 0b00000000,
0b00001010, 0b10100000, 0b00000000,
0b00101001, 0b01100000, 0b00000000,
0b00101001, 0b01100000, 0b00000000,
0b00101010, 0b10100000, 0b00000000,
0b00101010, 0b10000000, 0b00000000
};


/////////////////////////////////////
// NUMERALS

const std::vector<std::vector<uint8_t>> MCK::FancyTypeface::numeral_pixel_data{  // Start of outer vector
{ // 48
0b00001010, 0b10101010, 0b10101000,
0b00101011, 0b11111111, 0b11111010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101011, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01011010, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10101001, 0b01010101, 0b01011010,
0b10101010, 0b10101010, 0b10101010,
0b00101010, 0b10101010, 0b10101000
},
{ // 49
0b00000010, 0b10101010, 0b10000000,
0b00001010, 0b11111111, 0b10000000,
0b00101011, 0b11111111, 0b10000000,
0b00101011, 0b11111111, 0b10000000,
0b00101010, 0b10111111, 0b10000000,
0b00000010, 0b10101010, 0b10000000,
0b00001010, 0b10010101, 0b10101000,
0b00101001, 0b01010101, 0b01011000,
0b00101001, 0b01010101, 0b01011000,
0b00101001, 0b01010101, 0b01011000,
0b00101010, 0b10101010, 0b10101000,
0b00101010, 0b10101010, 0b10100000
},
{ // 50
0b00001010, 0b10101010, 0b10101000,
0b00101011, 0b11111111, 0b11111010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101010, 0b10101011, 0b11111010,
0b10101010, 0b10101010, 0b10101000,
0b10101001, 0b01010110, 0b10101010,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10101010, 0b10101010, 0b10101010,
0b10101010, 0b10101010, 0b10101000
},
{ // 51
0b00001010, 0b10101010, 0b10101000,
0b00101011, 0b11111111, 0b11111010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101010, 0b10101010, 0b11111010,
0b10101010, 0b10101010, 0b10101000,
0b10101010, 0b10100101, 0b01011010,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10101001, 0b01010101, 0b01011010,
0b10101010, 0b10101010, 0b10101010,
0b00101010, 0b10101010, 0b10101000
},
{ // 52
0b00000000, 0b10101010, 0b10100000,
0b00000010, 0b10111111, 0b11100000,
0b00001010, 0b11111111, 0b11100000,
0b10101011, 0b11111011, 0b11100000,
0b10101111, 0b11101011, 0b11101010,
0b10101010, 0b10101010, 0b10101010,
0b10010101, 0b01010101, 0b01010110,
0b10010101, 0b01010101, 0b01010110,
0b10101010, 0b10100101, 0b01101010,
0b10101010, 0b10100101, 0b01100000,
0b00000000, 0b10100101, 0b01100000,
0b00000000, 0b10101010, 0b10100000
},
{ // 53
0b00101010, 0b10101010, 0b10101010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b10101010, 0b10101010,
0b10101111, 0b11111110, 0b10101000,
0b10101010, 0b10101010, 0b10101000,
0b10101010, 0b10100101, 0b01011010,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10101001, 0b01010101, 0b01011010,
0b10101010, 0b10101010, 0b10101010,
0b00101010, 0b10101010, 0b10101000
},
{ // 54
0b00001010, 0b10101010, 0b10101000,
0b00101011, 0b11111111, 0b11111010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b10101010,
0b10101111, 0b11111111, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10101001, 0b01010101, 0b01011010,
0b10101010, 0b10101010, 0b10101010,
0b00101010, 0b10101010, 0b10101000
},
{ // 55
0b00101010, 0b10101010, 0b10101010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101010, 0b10101010, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b00000010, 0b10010101, 0b01101000,
0b00000010, 0b10010101, 0b10100000,
0b00000010, 0b10010101, 0b10000000,
0b00000010, 0b10010101, 0b10000000,
0b00000010, 0b10101010, 0b10000000,
0b00000010, 0b10101010, 0b10000000
},
{ // 56
0b00001010, 0b10101010, 0b10101000,
0b00101011, 0b11111111, 0b11111010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11111111, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01010101, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10101001, 0b01010101, 0b01011010,
0b10101010, 0b10101010, 0b10101010,
0b00101010, 0b10101010, 0b10101000
},
{ // 57
0b00001010, 0b10101010, 0b10101000,
0b00101011, 0b11111111, 0b11111010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01010101, 0b01010110,
0b10101010, 0b10101010, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10101001, 0b01010101, 0b01011010,
0b10101010, 0b10101010, 0b10101010,
0b00101010, 0b10101010, 0b10101000
}
};  // End of outer vector


///////////////////////////////////////
// UPPER CASE LETTERS

const std::vector<std::vector<uint8_t>> MCK::FancyTypeface::upper_case_pixel_data{  // Start of outer vector
{ // ASCII 65
0b00001010, 0b10101010, 0b10101000,
0b00101011, 0b11111111, 0b11111010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01010101, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10101010, 0b10101010, 0b10101010,
0b10101010, 0b10001010, 0b10101000
},
{ // 66
0b00101010, 0b10101010, 0b10101000,
0b10101111, 0b11111111, 0b11111010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111010,
0b10101010, 0b10101010, 0b10101000,
0b10100101, 0b01010101, 0b01011010,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01010101, 0b01011010,
0b10101010, 0b10101010, 0b10101000,
0b10101010, 0b10101010, 0b10000000
},
{ // 67
0b00001010, 0b10101010, 0b10101000,
0b00101011, 0b11111111, 0b11111010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b10101010,
0b10101010, 0b10101010, 0b10101000,
0b10100101, 0b01101010, 0b10101010,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10101001, 0b01010101, 0b01011010,
0b10101010, 0b10101010, 0b10101010,
0b00101010, 0b10101010, 0b10101000
},
{ // 68
0b00101010, 0b10101010, 0b10101000,
0b10101111, 0b11111111, 0b11111010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10100101, 0b01010101, 0b01011010,
0b10101010, 0b10101010, 0b10101000,
0b10101010, 0b10101010, 0b10000000
},
{ // 69
0b00101010, 0b10101010, 0b10101010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b10101010,
0b10101111, 0b11101010, 0b10101000,
0b10101010, 0b10101010, 0b10100000,
0b10100101, 0b01010101, 0b01100000,
0b10100101, 0b01101010, 0b10101010,
0b10100101, 0b01010101, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10101010, 0b10101010, 0b10101010,
0b10101010, 0b10101010, 0b10101000
},
{ // 70
0b00101010, 0b10101010, 0b10101010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b10101010,
0b10101111, 0b11101010, 0b10101000,
0b10101010, 0b10101010, 0b10100000,
0b10100101, 0b01010101, 0b01100000,
0b10100101, 0b01101010, 0b10100000,
0b10100101, 0b01101010, 0b10000000,
0b10100101, 0b01100000, 0b00000000,
0b10101010, 0b10100000, 0b00000000,
0b10101010, 0b10000000, 0b00000000
},
{ // 71
0b00001010, 0b10101010, 0b10101000,
0b00101011, 0b11111111, 0b11111010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b10101010,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01101001, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10101001, 0b01010101, 0b01011010,
0b10101010, 0b10101010, 0b10101010,
0b00101010, 0b10101010, 0b10101000
},
{ // 72
0b00101010, 0b10101010, 0b10101010,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11111111, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01010101, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10101010, 0b10101010, 0b10101010,
0b10101010, 0b10001010, 0b10101000
},
{ // 73
0b00101010, 0b10101010, 0b10101010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11111111, 0b11111110,
0b10101010, 0b10111111, 0b10101010,
0b10101010, 0b10111111, 0b10101000,
0b00000010, 0b10101010, 0b10000000,
0b00000010, 0b10010101, 0b10000000,
0b00101010, 0b10010101, 0b10101010,
0b10100101, 0b01010101, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10101010, 0b10101010, 0b10101010,
0b10101010, 0b10101010, 0b10101000
},
{ // 74
0b00101010, 0b10101010, 0b10101010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11111111, 0b11111110,
0b10101010, 0b10101111, 0b11101010,
0b10101010, 0b10101111, 0b11101000,
0b00000000, 0b10101010, 0b10100000,
0b00101010, 0b10100101, 0b01100000,
0b10100101, 0b10100101, 0b01100000,
0b10100101, 0b01010101, 0b01100000,
0b10101001, 0b01010101, 0b10100000,
0b10101010, 0b10101010, 0b10000000,
0b10101010, 0b10101010, 0b00000000
},
{ // 75
0b00101010, 0b10101010, 0b10101010,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101011, 0b11111010,
0b10101111, 0b11111111, 0b11101000,
0b10101010, 0b10101010, 0b10100000,
0b10100101, 0b01010101, 0b01101000,
0b10100101, 0b01101001, 0b01011010,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10101010, 0b10101010, 0b10101010,
0b10101010, 0b10100010, 0b10101000
},
{ // 76
0b00101010, 0b10100000, 0b00000000,
0b10101111, 0b11100000, 0b00000000,
0b10101111, 0b11100000, 0b00000000,
0b10101111, 0b11100000, 0b00000000,
0b10101111, 0b11100000, 0b00000000,
0b10101010, 0b10100000, 0b00000000,
0b10100101, 0b01100000, 0b00000000,
0b10100101, 0b01101010, 0b10101010,
0b10100101, 0b01010101, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10101010, 0b10101010, 0b10101010,
0b10101010, 0b10101010, 0b10101000
},
{ // 77
0b00101010, 0b10000000, 0b10101010,
0b10101111, 0b10100010, 0b10111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11111011, 0b11111110,
0b10101111, 0b11111111, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01010101, 0b01010110,
0b10100101, 0b01100110, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10101010, 0b10101010, 0b10101010,
0b10101010, 0b10001010, 0b10101000
},
{ // 78
0b00101010, 0b10000010, 0b10101010,
0b10101111, 0b10100010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11111010, 0b11111110,
0b10101111, 0b11111111, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01010101, 0b01010110,
0b10100101, 0b01100101, 0b01010110,
0b10100101, 0b01101001, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10101010, 0b10101010, 0b10101010,
0b10101010, 0b10001010, 0b10101000
},
{ // 79
0b00001010, 0b10101010, 0b10101000,
0b00101011, 0b11111111, 0b11111010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10101001, 0b01010101, 0b01011010,
0b10101010, 0b10101010, 0b10101010,
0b00101010, 0b10101010, 0b10101000
},
{ // 80
0b00101010, 0b10101010, 0b10101000,
0b10101111, 0b11111111, 0b11111010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01010101, 0b01011010,
0b10100101, 0b01101010, 0b10101000,
0b10100101, 0b01101010, 0b10100000,
0b10100101, 0b01100000, 0b00000000,
0b10101010, 0b10100000, 0b00000000,
0b10101010, 0b10000000, 0b00000000
},
{ // 81
0b00001010, 0b10101010, 0b10101000,
0b00101011, 0b11111111, 0b11111010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01101001, 0b01011010,
0b10100101, 0b01010101, 0b01010110,
0b10101001, 0b01010101, 0b10010110,
0b10101010, 0b10101010, 0b10101010,
0b00101010, 0b10101010, 0b10101000
},
{ // 82
0b00101010, 0b10101010, 0b10101000,
0b10101111, 0b11111111, 0b11111010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01010101, 0b01011010,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10101010, 0b10101010, 0b10101010,
0b10101010, 0b10001010, 0b10101000
},
{ // 83
0b00001010, 0b10101010, 0b10101000,
0b00101011, 0b11111111, 0b11111010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101011, 0b11111010, 0b10101010,
0b10101010, 0b10101010, 0b10101010,
0b10101010, 0b10101001, 0b01011010,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10101001, 0b01010101, 0b01011010,
0b10101010, 0b10101010, 0b10101010,
0b00101010, 0b10101010, 0b10101000
},
{ // 84
0b00101010, 0b10101010, 0b10101010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11111111, 0b11111110,
0b10101010, 0b10111111, 0b10101010,
0b10101010, 0b10111111, 0b10101000,
0b00000010, 0b10101010, 0b10000000,
0b00000010, 0b10010101, 0b10000000,
0b00000010, 0b10010101, 0b10000000,
0b00000010, 0b10010101, 0b10000000,
0b00000010, 0b10010101, 0b10000000,
0b00000010, 0b10101010, 0b10000000,
0b00000010, 0b10101010, 0b00000000
},
{ // 85
0b00101010, 0b10101010, 0b10101010,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10101001, 0b01010101, 0b01011010,
0b10101010, 0b10101010, 0b10101010,
0b00101010, 0b10101010, 0b10101000
},
{ // 86
0b00101010, 0b10101010, 0b10101010,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01101010, 0b01010110,
0b10101001, 0b01011001, 0b01011010,
0b10101010, 0b01010101, 0b01101000,
0b00101010, 0b10010101, 0b10100000,
0b00001010, 0b10101010, 0b10000000,
0b00000010, 0b10101010, 0b00000000
},
{ // 87
0b10101010, 0b10100010, 0b10101010,
0b10101111, 0b11100010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101110, 0b11111110,
0b10101111, 0b11111111, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b01010101, 0b01010110,
0b10100101, 0b01011001, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b10101010, 0b10010110,
0b10101010, 0b10100010, 0b10101010,
0b10101010, 0b10000000, 0b10101000
},
{ // 88
0b00101010, 0b10100010, 0b10101010,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11111011, 0b11111110,
0b10101011, 0b11111111, 0b11111010,
0b10101010, 0b10101010, 0b10101000,
0b00101001, 0b01010101, 0b01011010,
0b10100101, 0b01011001, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10100101, 0b01101010, 0b01010110,
0b10101010, 0b10101010, 0b10101010,
0b10101010, 0b10001010, 0b10101000
},
{ // 89
0b00101010, 0b10101010, 0b10101010,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11101010, 0b11111110,
0b10101111, 0b11111111, 0b11111110,
0b10101010, 0b10101010, 0b10101010,
0b00101010, 0b01010101, 0b01101000,
0b00001010, 0b10010101, 0b10100000,
0b00000010, 0b10010101, 0b10000000,
0b00000010, 0b10010101, 0b10000000,
0b00000010, 0b10101010, 0b10000000,
0b00000010, 0b10101010, 0b00000000
},
{ // 90
0b00101010, 0b10101010, 0b10101010,
0b10101111, 0b11111111, 0b11111110,
0b10101111, 0b11111111, 0b11111110,
0b10101010, 0b10101111, 0b11111010,
0b10101010, 0b10111111, 0b11101000,
0b00000010, 0b10101010, 0b10100000,
0b00001010, 0b01010101, 0b10000000,
0b00101001, 0b01010110, 0b10101010,
0b10100101, 0b01010101, 0b01010110,
0b10100101, 0b01010101, 0b01010110,
0b10101010, 0b10101010, 0b10101010,
0b10101010, 0b10101010, 0b10101000
},
};  // End of outer vector


/////////////////////////////////////////
// EXTENDED SYMBOLS (ASCII 128+)

const std::vector<uint8_t> MCK::FancyTypeface::copyright_symbol_pixel_data
{ // 255
0b00001010, 0b10101010, 0b10101000,
0b00101011, 0b11111111, 0b11111010,
0b10101111, 0b10101010, 0b10111110,
0b10101111, 0b10111111, 0b10111110,
0b10101111, 0b10111010, 0b10111110,
0b10101010, 0b10101010, 0b10101010,
0b10100101, 0b10011010, 0b10010110,
0b10100101, 0b10010101, 0b10010110,
0b10100101, 0b10101010, 0b10010110,
0b10101001, 0b01010101, 0b01011010,
0b10101010, 0b10101010, 0b10101010,
0b00101010, 0b10101010, 0b10101000
};
