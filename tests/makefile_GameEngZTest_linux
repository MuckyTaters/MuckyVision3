###########################################
##  -----------------------------------
##  ---MUCKY VISION 3 (BASIC ENGINE)---
##  -----------------------------------
##
##  makefile_GameEngZTest_linux
##
##  Makefile to build test of 'z' values
##  in GameEng class on Linux using g++.
##
##  IMPORTANT:
##  Before running this file, please 
##  read section 4 of README.md in the
##  projects top level directory.
##
##  Copyright (c) Muckytaters 2023
##
##  This program is free software: you can
##  redistribute it and/or modify it under 
##  the terms of the GNU General Public License
##  as published by the Free Software Foundation,
##  either version 3 of the License, or (at your
##  option) any later version.
##
##  This program is distributed in the hope it
##  will be useful, but WITHOUT ANY WARRANTY;
##  without even the implied warranty of MERCHANTABILITY
##  or FITNESS FOR A PARTICULAR PURPOSE. See the
##  GNU General Public License for more details.
##
##  You should have received a copy of the GNU
##  General Public License along with this
##  program. If not, see http://www.gnu.org/license
############################################

#############################################
## DISCLAIMER: Dependencies described herein
## are maintained on a best-effort basis and
## may not be 100% correct. If in doubt,
## execute 'make -f makefile_GameEngZTest_linux clean'
## then 'make -f makefile_GameEngZTest_linux' to
## rebuild the entire project
#############################################

#############################################
############# PRELIMINARIES #################
#############################################

#List of all files to be built
BUILDS := build/GameEngRenderBase.o build/GameEng.o build/GameEngZTest.o

#CC specifies which compiler we're using
CC := g++

#COMPILER_FLAGS specifies the additional compilation options we're using
# -g debug build
# -std=c++14 Use C++14 (only needed for binary literals, otherwise C++11 is fine)
# -pedantic-errors
COMPILER_FLAGS := -g -std=c++14 -pedantic-errors

#LINKER_FLAGS specifies the libraries we're linking against
LINKER_FLAGS := -lSDL2 

#INC specifies include directories
INC := -I../include

#OUTPUT specifies the name of our exectuable
OUTPUT := GameEngZTest


#############################################
################# EXECUTABLE ################
#############################################

# This comes first so we can use 'make' as well as 'make all'
#This is the target that compiles our executable
all: $(BUILDS)
	$(CC) $(BUILDS) $(COMPILER_FLAGS) $(INC) $(LINKER_FLAGS) -o $(OUTPUT)


# Rules to make dependencies.................

## GameEngRenderBase ##
build/GameEngRenderBase.o: ../src/GameEngRenderBase.cpp ../include/GameEngRenderBase.h 
	$(CC) -c ../src/GameEngRenderBase.cpp $(COMPILER_FLAGS) $(INC) $(LINKER_FLAGS) -o build/GameEngRenderBase.o

## GameEng ##
build/GameEng.o: ../src/GameEng.cpp ../include/GameEng.h build/GameEngRenderBase.o ../include/Defs.h ../include/KeyEvent.h ../include/Version.h ../include/GameEngRenderInfo.h ../include/GameEngRenderBlock.h
	$(CC) -c ../src/GameEng.cpp $(COMPILER_FLAGS) $(INC) $(LINKER_FLAGS) -o build/GameEng.o

## GameEngZTest ##
build/GameEngZTest.o: GameEngZTest.cpp build/GameEng.o 
	$(CC) -c GameEngZTest.cpp $(COMPILER_FLAGS) $(INC) $(LINKER_FLAGS) -o build/GameEngZTest.o


#############################################
################### CLEAN ###################
#############################################

.PHONY: clean
clean:
	rm -f build/*.o
